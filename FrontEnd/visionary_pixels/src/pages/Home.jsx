import React, { useState, useEffect } from "react"
import { Loader, Card, FormField } from "../components/index.js"

const RenderCards = ({data, title}) => {
  if (data?.length > 0) {
    return data.map(post => <Card key={post.id} {...post} />)
  }

  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  )
}

const Home = () => {

  const [loading, setLoading] = useState(false)
  const [allPosts, setAllPosts] = useState(null)
  const [searchText, setSearchText] = useState('')
  const [searchedResults, setSearchedResults] = useState(null)
  const [searchTimeout, setSearchTimeout] = useState(null)

useEffect(() => {
  const getPosts = async () => {
setLoading(true)

try {
  const response = await fetch("/api/v1/post", {
    method: "get",
    headers: {
      "Content-Type": "application/json",
    },
  })
  if(response.ok){
    const results = await response.json()
    setAllPosts(results.data.reverse())
  }
} catch (error) {
  alert(error)
} finally {
  setLoading(false)
}
  }

  getPosts()
}, [])

const handleSearch = (e) => {
  clearTimeout(searchTimeout)
  setSearchText(e.target.value)

  setSearchTimeout(
  setTimeout(() => {
    const searchResults = allPosts.filter(item => item.name.toLowerCase().includes(searchText.toLowerCase()) ||
    item.prompt.toLowerCase().includes(searchText.toLowerCase())
  )
  setSearchedResults(searchResults)
  }, 500)
)
}
  return (
    <section className="max-w-7xl mx-auto">
      <div className="">
        <h1 className="font-extrabold text-[#222328] text-[2rem]">The Community Showcase</h1>
        <p className="mt-2 text-[#666e75] text-[1rem] max-w-[500px]">Browse through a collection of imaginative and visually stunning images generated by Visionary_Pixels</p>
      </div>
      <div className="mt-16">
        <FormField
        lableName={"Search post..."}
        name={"text"}
        placeholder={"Search post..."}
        value={searchText}
        handleChange={handleSearch}
        />
      </div>
      <div className="mt-10">
        {
          loading ? <div className="flex justify-center items-center">
            <Loader />
          </div> : <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">Showing results for <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No search results found"
                />) :
                (
                  <RenderCards
                    data={allPosts}
                    title="No posts found"
                  />
                )
              }
            </div>
          </>
        }
      </div>
    </section>
  )
}
export default Home